Word Games Tester

import java.util.Scanner;

public class WordGameTester
{
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        
        // Ask for a word
        System.out.println("Enter a word: ");
        String userWord = input.nextLine();
        WordGames game = new WordGames(userWord);
        // Scramble it
        // Print out scrambled word
        System.out.println(game.scramble());
        // Ask for an index
        // Ask for random word
        System.out.println("Enter an integer: ");
        int idx = input.nextInt();
        input.nextLine();  // skip over the newline
        System.out.println("Enter another word: ");
        String word = input.nextLine();
        
        // Add random word at index
        // Print out the word
        System.out.println(game.bananaSplit(idx, word));
        
        // Ask for a character (store as a String)
        System.out.println("Enter a character: ");
        String userChar = input.nextLine();
        // Ask for random word
        System.out.println("Enter another word: ");
        String randWord = input.nextLine();
        // Add random word at character
        // Print out the word
        System.out.println(game.bananaSplit(userChar, randWord));
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Word Games Class

public class WordGames
{
    private String word;
    
    public WordGames(String text)
    {
        word = text;
    }
    
    public String scramble()
    {
        // switch first half
        // and second half
        return word.substring(word.length()/2) + word.substring(0, word.length()/2);
    }
    
    
    public String bananaSplit(int insertIdx, String insertText)
    {
        // Insert insertText at the position
        // insertIdx
        return word.substring(0, insertIdx) + insertText + word.substring(insertIdx);
    }
    
    
    public String bananaSplit(String insertChar, String insertText)
    {
        // Insert insertText after the first
        // occurence of the insertChar
        return word.substring(0, word.indexOf(insertChar)) + insertText + word.substring(word.indexOf(insertChar));
    }
    
    
    public String toString()
    {
        // Games[word]
        return "[" + word + "]";
    }
    
    
}
